#!/bin/ash
#
# entrypoint: Located at `/etc/container/entrypoint` this script is the custom
#             entry for a container as called by `/usr/bin/container-entrypoint` set
#             in the upstream [alpine-container](https://github.com/gautada/alpine-container).
#             The default template is kept in
#             [gist](https://gist.github.com/gautada/f185700af585a50b3884ad10c2b02f98)


container_version() {
 /usr/bin/duplicity --version | awk -F ' ' '{print $2}'
}

container_entrypoint() {
 if [ -z $DUPLICITY_ENCRYPTER_FINGERPRINT ] ; then
  /bin/echo "Encrypter Fingerprint Not Found"
  return 1
 fi
 ENCRYPTER_KEY_FILE="/mnt/volumes/configmaps/$(/bin/echo $DUPLICITY_ENCRYPTER_FINGERPRINT).key"
 # /bin/echo $ENCRYPTER_PUBLIC_KEY
 if [ ! -f $ENCRYPTER_KEY_FILE ] ; then
  /bin/echo "Encrypter public key not found"
  return 2
 fi
 FILE_FINGERPRINT="$(/usr/bin/gpg --show-keys $ENCRYPTER_KEY_FILE | sed -n '2p' | xargs)"
 if [ "$DUPLICITY_ENCRYPTER_FINGERPRINT" != "$FILE_FINGERPRINT" ] ; then
  /bin/echo "Configured fingerprint[$DUPLICITY_ENCRYPTER_FINGERPRINT] and provided file fingerprint[$FILE_FINGERPRINT] do not match"
  return 3
 fi
 /usr/bin/gpg --batch --trusted-key $DUPLICITY_ENCRYPTER_FINGERPRINT --import  $ENCRYPTER_KEY_FILE
 /bin/echo "trusted-key $DUPLICITY_ENCRYPTER_FINGERPRINT" >> $HOME/.gnupg/gpg.conf

 if [ -z $DUPLICITY_SIGNER_FINGERPRINT ] ; then
  /bin/echo "Signer Fingerprint Not Found skipping signer key load"
 else
  SIGNER_PKEY_FILE="/mnt/volumes/configmaps/$(/bin/echo $DUPLICITY_SIGNER_FINGERPRINT).pkey"
  if [ ! -f $SIGNER_PKEY_FILE ] ; then
   /bin/echo "Signer public key not found"
   return 4
  fi 
  SIGNER_FILE_FINGERPRINT="$(/usr/bin/gpg --show-keys $SIGNER_PKEY_FILE | sed -n '2p' | xargs)"
  if [ "$DUPLICITY_SIGNER_FINGERPRINT" != "$SIGNER_FILE_FINGERPRINT" ] ; then
   /bin/echo "Configured fingerprint[$DUPLICITY_SIGNER_FINGERPRINT] and provided file fingerprint[$SIGNER_FILE_FINGERPRINT] do not match"
   return 5
  fi
  /bin/echo $DUPLICITY_SIGNER_PASSPHRASE | /usr/bin/gpg --passphrase-fd 0 --batch --trusted-key $DUPLICITY_SIGNER_FINGERPRINT --import $SIGNER_PKEY_FILE
  /bin/echo "trusted-key $DUPLICITY_SIGNER_FINGERPRINT" >> $HOME/.gnupg/gpg.conf
 fi

 /usr/bin/gpg --list-keys
    
 /bin/echo "Blocking function until real mechanism is in place."
 /usr/bin/tail -f /dev/null
}
